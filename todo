This is just the current plan, plans change.

Annotations:
  RC == Release Critical

0.7.4 [4'08] (aka "fix search"):
- modify datastore to return diverse subsets of large response sets,
  except when processing for loopback [RC]
  IDEA: do pre-pass over result set, count # number; then LIMIT with OFFSET 
        by RAND(total) for the first result and then wrap around
        to the beginning if the iterator reaches total.
        + reasonably fast for arbitrary large result sets
        - except measureable slowdown (?) for result sets of size 1?)
        + equal chance to get any result first
        + no need for threads per multi-result query
        - non-trivial code required in every sqstore implementation
        o testable, but not trivial to test fully
- modify gap.c to NOT do full iteration over result set (current code
  might take forever; add bound in # replies (prio+1?) and 
  # iterations (10*(prio+1)?)done!)
- fix pid-table assertion crash (rare, produced with linear-gap test) [RC]
- tune GAP query planning code [RC]
- reenable and test GAP migration code [RC]
- complete IPv4/IPv6 integration of transports (http is missing!) [RC]
- integrated hostlist server application using libmicrohttpd [RC]
- Insert/Index a "shared directory" automatically [Nils]
  See also: https://gnunet.org/drupal/?q=node/97 [RC]
  Furthermore: Blake suggested indexing a document only after
  a keyword of the document has been requested (so we would 
  add a special block to the datastore and then trigger
  gnunet-insert only if the file is actually needed!)

0.8.0 [6'08] (aka "advanced features"):
- gnunet-chat [ RC ]
- power insert [#854]
- RPC API and testcase


1.0.0 (aka "userfriendly"):

Small extensions (that could be done any time):
- insert meta-data under hash (md5? sha1? sha-512? GNUnet-URI?)
  as keyword (to allow getting meta-data from URI only) [RC]
- support NAT-PMP (in addition to UPnP)
- SMTP logger 




FreeServices
- onion routing
	- application service
	- unreliable connection through GNUnet core
	- initiator chooses path, other ORs suggest some (!) ORs for next hop
	  (choose path often according to suggestions, but route randomly
	   sometimes)
	- accounting
		- each predecessor ist reposible (accountable) for its predecessor
		  and has to reject connections from untrusted nodes because
		  misbehaving nodes harm own trust
	  - tell predecessor about MIN(own limits, successor's limits)
	- onion routing based transport
		- use introduction point instead of IP in HELO
		- => integrate NATed hosts
- subnet advertising (DHT, chat, GAP, ...)
	- applications register subnets, core advertises subnets
- anonymous DHT
	- create OR tunnel to ADHT node that performs DHT operation
	- check success of DHT operation through another tunnel
	- => OR and FreeService advertisements
	- Hostlist?



