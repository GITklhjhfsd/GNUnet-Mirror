List of the top known memory users in GNUnet for
the default configuration:

* Bloomfilters (size depends on DISKQUOTA, think 64k-1 MB)
* GAP routing table (100 * TABLESIZE,  think 100k (min) to 7 MB (default) or more)
* connection send buffers (variable)
* TCP buffers (variable)
* querymanager (think 64k)
* databases (size depends on DATABASETYPE and DISKQUOTA,
  think 0-50 MB)


What can you do to lower gnunetd's memory footprint?
* reduce GAP routing table size (min is 1024)
* do not compile with debug symbols (-g)
* compile with optimizations (-O2)
* disable internationalization (export LANG=)
* do not load unused application modules (chat, tbench, etc.)


What can you expect to achieve:
* Low footprints are in the area of 2-3 MB (i386)
* Normal footprints are in the range of 10-20 MB
* above 100 MB is a certain sign for memory leaks, try running
  with valgrind and send reports to the developers about
  any leaks that were found; you can have gnunetd automatically
  terminate without a signal using the VALGRIND = SECONDS option
  in section [GNUNETD].  This can be useful to generate a
  valgrind trace for gnunetd that should run over exactly that
  many seconds (typically the longer you can afford to wait,
  the more likely you are to actually observe a relevant event
  in the trace -- and make sure to actually USE gnunetd while
  tracing for leaks). 
  One more note about using valgrind.  Since GNUnet uses
  plugins that are unloaded on shutdown, the memory traces
  are likely to be garbeled if nothing is done.  Setting
  the VALGRIND option will disable unloading plugins (see
  src/util/dso.c) and thus improve the traces significantly.

